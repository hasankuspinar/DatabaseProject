@{
    ViewData["Title"] = "Admin Chat Dashboard";
}

<h2>Admin Support Chat</h2>

<div id="allChatsContainer">
    <!-- All messages and replies will appear here -->
</div>

@section Scripts {
    <!-- Firebase scripts -->
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-firestore-compat.js"></script>

    <script>
        const queryParams = new URLSearchParams(window.location.search);
        const username = queryParams.get("username");
        const userRole = queryParams.get("role");

        // Initialize Firebase
        const firebaseConfig = {
            apiKey: "",
            authDomain: "",
            projectId: "",
            storageBucket: "",
            messagingSenderId: "",
            appId: ""
        };
        const app = firebase.initializeApp(firebaseConfig);
        const db = firebase.firestore();

        // Ensure only admins can access this page
        if (userRole !== "admin") {
            alert("Access denied. Redirecting to login...");
            window.location.href = "/Auth/Login";
        }

        // Listen to all messages and display them
        function listenToAllMessages() {
            db.collection("messages")
                .orderBy("timestamp", "asc")
                .onSnapshot((snapshot) => {
                    const chatContainer = document.getElementById("allChatsContainer");
                    chatContainer.innerHTML = ""; // Clear previous messages

                    snapshot.forEach((doc) => {
                        const data = doc.data();
                        const msgDiv = document.createElement("div");
                        msgDiv.innerHTML = `
                            <p><strong>${data.userName}</strong> (${data.username})</p>
                            <p><strong>Subject:</strong> ${data.subject}</p>
                            <p>${data.message}</p>
                            <em>${data.timestamp?.toDate()?.toLocaleString() || "N/A"}</em>
                            <div>
                                <label>Admin Reply:</label>
                                <textarea id="reply-${doc.id}" style="width: 100%; height: 50px;"></textarea>
                                <button onclick="sendReply('${doc.id}', '${data.username}')">Send Reply</button>
                            </div>
                            <hr/>
                        `;

                        // Show existing reply if available
                        if (data.reply) {
                            const replyDiv = document.createElement("div");
                            replyDiv.innerHTML = `
                                <p><strong>Admin Reply:</strong> ${data.reply}</p>
                                <em>(${data.replyTimestamp?.toDate()?.toLocaleString() || "N/A"})</em>
                                <hr/>
                            `;
                            msgDiv.appendChild(replyDiv);
                        }

                        chatContainer.appendChild(msgDiv);
                    });
                }, (error) => {
                    console.error("Error in Firestore query:", error);
                });
        }

        async function sendReply(messageId, username) {
            const replyInput = document.getElementById(`reply-${messageId}`);
            const reply = replyInput.value.trim();
            if (!reply) {
                alert("Reply cannot be empty.");
                return;
            }

            try {
                await db.collection("messages").doc(messageId).update({
                    reply: reply,
                    adminName: username, // Admin's username
                    replyTimestamp: firebase.firestore.FieldValue.serverTimestamp()
                });
                alert("Reply sent successfully!");
                replyInput.value = ""; // Clear the reply input
            } catch (error) {
                console.error("Error sending reply:", error);
            }
        }
        listenToAllMessages();
    </script>
}
